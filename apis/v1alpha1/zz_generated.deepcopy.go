// Copyright 2006-2021 VMware, Inc.
// SPDX-License-Identifier: MIT
// +build !ignore_autogenerated

/*

 */

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LimitRange) DeepCopyInto(out *LimitRange) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LimitRange.
func (in *LimitRange) DeepCopy() *LimitRange {
	if in == nil {
		return nil
	}
	out := new(LimitRange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPolicy) DeepCopyInto(out *NetworkPolicy) {
	*out = *in
	if in.TargetPodLabels != nil {
		in, out := &in.TargetPodLabels, &out.TargetPodLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.IngressNamespaceLabels != nil {
		in, out := &in.IngressNamespaceLabels, &out.IngressNamespaceLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.IngressPodLabels != nil {
		in, out := &in.IngressPodLabels, &out.IngressPodLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.IngressTCPPorts != nil {
		in, out := &in.IngressTCPPorts, &out.IngressTCPPorts
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
	if in.IngressUDPPorts != nil {
		in, out := &in.IngressUDPPorts, &out.IngressUDPPorts
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
	if in.EgressNamespaceLabels != nil {
		in, out := &in.EgressNamespaceLabels, &out.EgressNamespaceLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.EgressPodLabels != nil {
		in, out := &in.EgressPodLabels, &out.EgressPodLabels
		*out = make(map[string]string, len(*in))
		for key, val := range *in {
			(*out)[key] = val
		}
	}
	if in.EgressTCPPorts != nil {
		in, out := &in.EgressTCPPorts, &out.EgressTCPPorts
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
	if in.EgressUDPPorts != nil {
		in, out := &in.EgressUDPPorts, &out.EgressUDPPorts
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPolicy.
func (in *NetworkPolicy) DeepCopy() *NetworkPolicy {
	if in == nil {
		return nil
	}
	out := new(NetworkPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkPort) DeepCopyInto(out *NetworkPort) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkPort.
func (in *NetworkPort) DeepCopy() *NetworkPort {
	if in == nil {
		return nil
	}
	out := new(NetworkPort)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RBAC) DeepCopyInto(out *RBAC) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RBAC.
func (in *RBAC) DeepCopy() *RBAC {
	if in == nil {
		return nil
	}
	out := new(RBAC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResourceQuota) DeepCopyInto(out *ResourceQuota) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResourceQuota.
func (in *ResourceQuota) DeepCopy() *ResourceQuota {
	if in == nil {
		return nil
	}
	out := new(ResourceQuota)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TanzuNamespace) DeepCopyInto(out *TanzuNamespace) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TanzuNamespace.
func (in *TanzuNamespace) DeepCopy() *TanzuNamespace {
	if in == nil {
		return nil
	}
	out := new(TanzuNamespace)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TanzuNamespace) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TanzuNamespaceList) DeepCopyInto(out *TanzuNamespaceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TanzuNamespace, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TanzuNamespaceList.
func (in *TanzuNamespaceList) DeepCopy() *TanzuNamespaceList {
	if in == nil {
		return nil
	}
	out := new(TanzuNamespaceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TanzuNamespaceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TanzuNamespaceSpec) DeepCopyInto(out *TanzuNamespaceSpec) {
	*out = *in
	out.LimitRange = in.LimitRange
	out.ResourceQuota = in.ResourceQuota
	if in.NetworkPolicies != nil {
		in, out := &in.NetworkPolicies, &out.NetworkPolicies
		*out = make([]NetworkPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RBAC != nil {
		in, out := &in.RBAC, &out.RBAC
		*out = make([]RBAC, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TanzuNamespaceSpec.
func (in *TanzuNamespaceSpec) DeepCopy() *TanzuNamespaceSpec {
	if in == nil {
		return nil
	}
	out := new(TanzuNamespaceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TanzuNamespaceStatus) DeepCopyInto(out *TanzuNamespaceStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TanzuNamespaceStatus.
func (in *TanzuNamespaceStatus) DeepCopy() *TanzuNamespaceStatus {
	if in == nil {
		return nil
	}
	out := new(TanzuNamespaceStatus)
	in.DeepCopyInto(out)
	return out
}
